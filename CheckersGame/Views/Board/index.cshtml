<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>

    <meta charset="utf-8" />
    <title></title>
</head>
<body>
    <div class="modal fade" tableindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal body">
                    <h5>GAME OVER</h5>
                </div>
                <div class="modal-footer">
                    <button type="button" id="restart" class="btn btn-primary">Restart</button>
                    <button type="button" id="quit" class="btn btn-primary">Quit</button>
                </div>
            </div>
        </div>
    </div>

    <div class="container" id="checkerBoard">
        <div class="row">
            <div class="board col-md">
                <canvas id="board" width="400" height="400" style="border: 1px solid black"></canvas>
            </div>
            <div class="score col-md">
                <table class="table">
                    <tbody>
                        <tr>
                            <th scope="row">Left white checkers</th>
                            <td id="white"> </td>
                        </tr>
                        <tr>
                            <th scope="row">Left black checkers</th>
                            <td id="black"> </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div>
        <button type="button" id="newGame" class="btn btn-primary restart">New game</button>
    </div>
</body>
</html>
<script src="https://code.jquery.com/jquery-3.4.0.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
<script type="text/javascript">
    var game;
    function FunctionGet() {
        game = true;
$.get("@Url.Action("Get", "Api")")
    .done(function (data) {
                            var drawBoard = function (data, id) {
                    var board = document.getElementById(id);
                    var ctx = board.getContext("2d");
                    var w = data.length;
                    var h = data[0].length;

                    for (var j = 0; j < w; j++) {

                        for (var i = 0; i < h; i++) {
                            ctx.moveTo(0, j*40);
                            ctx.lineTo(h*40, j*40);
                            ctx.stroke();
                             ctx.moveTo(i*40, 0);
                            ctx.lineTo(i*40, w*40);
                            ctx.stroke();

                            if (data[i][j].squareColor==2  && data[i][j].checkerColor==3) {

                                ctx.fillStyle = "white";
                                    ctx.fillRect(40 * j, 40 * i, 40, 40);

                            }
                            else if (data[i][j].checkerColor == 1 && data[i][j].squareColor == 1) {

                                ctx.fillStyle = "black";
                                ctx.fillRect(40 * j, 40 * i, 40, 40);

                                ctx.fillStyle = "red";
                                ctx.beginPath();
                                    ctx.arc(j*40+20, i * 40 + 20, 15, 0, 2 * Math.PI);
                                ctx.closePath();
                                ctx.fill();

                            }
                            else if(data[i][j].checkerColor == 2 && data[i][j].squareColor==1) {
                                ctx.fillStyle = "black";
                                ctx.fillRect(40 * j, 40 * i, 40, 40);
                                ctx.fillStyle = "white";
                                ctx.beginPath();
                                    ctx.arc(j*40+20, i * 40 + 20, 15, 0, 2 * Math.PI);
                                ctx.closePath();
                                ctx.fill();

                            }
                            else if(data[i][j].checkerColor == 3 && data[i][j].squareColor==1){
                                ctx.fillStyle = "black";
                                    ctx.fillRect(40 * j, 40 *i, 40, 40);
                }
                        }

                    }
                    };
                    GetBlack();
                        GetWhite();
                    drawBoard(data, "board");
                    });

    };

$(document).ready(function () {
        $("#newGame, #restart").click(function () {
            Hide();
            FunctionGet();
        });
        $("#quit").click(function () {
            window.close();
        });
        FunctionGet();

    Hide();
                       var xFrom;
        var yFrom;
        game = true;
        $("canvas").on("click", function (e) {
            if (game) {
var elm = $(this)

            if (xFrom == null && yFrom == null) {
                xFrom = Math.floor((e.pageX - elm.offset().left) / 40);
                yFrom = Math.floor((e.pageY - elm.offset().top) / 40);
                if ((xFrom + yFrom) % 2 == 0)

                {
                    xFrom = null;
                    yFrom = null;
                }
            }
            else {
                var xTo = Math.floor((e.pageX - elm.offset().left) / 40);
                var yTo = Math.floor((e.pageY - elm.offset().top) / 40);
                if ((xTo + yTo) % 2 == 0) {
                    xTo = null;
                    yTo = null;
                }
                else { $.post("@Url.Action("Update", "Api")", {xFrom, yFrom, xTo, yTo })

                    .done(function (data) {
                        var drawBoard = function (data, id) {
                            var board = document.getElementById(id);
                            var ctx = board.getContext("2d");
                            var h = data.checkerBoard.length;
                            var w = data.checkerBoard.length;

                            for (var j = 0; j < w; j++) {

                                for (var i = 0; i < h; i++) {
                                    ctx.moveTo(0, j * 40);
                                    ctx.lineTo(h * 40, j * 40);
                                    ctx.stroke();
                                    ctx.moveTo(i * 40, 0);
                                    ctx.lineTo(i * 40, w * 40);
                                    ctx.stroke();

                                    if (data.checkerBoard[i][j].squareColor == 2 && data.checkerBoard[i][j].checkerColor == 3) {

                                        ctx.fillStyle = "white";
                                        ctx.fillRect(40 * j, 40 * i, 40, 40);

                                    }
                                    else if (data.checkerBoard[i][j].checkerColor == 1 && data.checkerBoard[i][j].squareColor == 1) {

                                        ctx.fillStyle = "black";
                                        ctx.fillRect(40 * j, 40 * i, 40, 40);

                                        ctx.fillStyle = "red";
                                        ctx.beginPath();
                                        ctx.arc(j * 40 + 20, i * 40 + 20, 15, 0, 2 * Math.PI);
                                        ctx.closePath();
                                        ctx.fill();

                                    }
                                    else if (data.checkerBoard[i][j].checkerColor == 2 && data.checkerBoard[i][j].squareColor == 1) {
                                        ctx.fillStyle = "black";
                                        ctx.fillRect(40 * j, 40 * i, 40, 40);
                                        ctx.fillStyle = "white";
                                        ctx.beginPath();
                                        ctx.arc(j * 40 + 20, i * 40 + 20, 15, 0, 2 * Math.PI);
                                        ctx.closePath();
                                        ctx.fill();

                                    }
                                    else if (data.checkerBoard[i][j].checkerColor == 3 && data.checkerBoard[i][j].squareColor == 1) {
                                        ctx.fillStyle = "black";
                                        ctx.fillRect(40 * j, 40 * i, 40, 40);

                                    }

                                }

                            }

                        };
                        GetBlack();
                        GetWhite();

                        drawBoard(data, "board");

                        if (data.state == 1) {
                        GameOver();
                            game = false;
                        }
                    });

                    xFrom = null;
                    yFrom = null;
                }

            }
            }
            else {

            }

        });
});

    function GetWhite() {
        $.get("@Url.Action("GetWhiteCount", "Api")")
            .done(function (count) {
                document.getElementById("white").innerHTML = count;
            });
    };

    function GetBlack () {
        $.get("@Url.Action("GetBlackCount", "Api")")
            .done(function (count) {
               document.getElementById("black").innerHTML = count;
            })
    };
function GameOver() {
        $(".modal").show();
    };
 function Hide() {
        $(".modal").hide();
    };
</script>